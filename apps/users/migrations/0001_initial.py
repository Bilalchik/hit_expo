# Generated by Django 3.2.9 on 2023-07-25 18:46

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('user_type', models.PositiveSmallIntegerField(choices=[(1, 'СМИ'), (2, 'ПОСЕТИТЕЛЬ'), (3, 'ЭКСПЕРТ'), (4, 'ГОС-ОРГАНЫ')], default=2, verbose_name='Тип пользователя')),
                ('uniqueId', models.UUIDField(blank=True, null=True, unique=True, verbose_name='Уникальный id')),
                ('email', models.EmailField(max_length=200, unique=True, verbose_name='Email')),
                ('resetPasswordUUID', models.UUIDField(blank=True, null=True, verbose_name='Ссылка для восстановления пароля')),
                ('resetPasswordDate', models.BigIntegerField(blank=True, null=True, verbose_name='Время восстановления пароля')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользовати',
            },
        ),
        migrations.CreateModel(
            name='Expert',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='users.user')),
                ('full_name', models.CharField(max_length=300, verbose_name='Ф.И.О')),
                ('phone', models.BigIntegerField(blank=True, null=True, verbose_name='Телефон')),
                ('whatsapp_bool', models.BooleanField(default=False, verbose_name='WhatsApp')),
                ('telegram_bool', models.BooleanField(default=False, verbose_name='Telegram')),
                ('radio_bool', models.BooleanField(default=False, verbose_name='Радио реклама')),
                ('tv_bool', models.BooleanField(default=False, verbose_name='ТВ')),
                ('instagram_bool', models.BooleanField(default=False, verbose_name='Инстаграм')),
                ('invite_mail', models.BooleanField(default=False, verbose_name='Приглашение от организаторов по почте')),
                ('invite_fair', models.BooleanField(default=False, verbose_name='Приглашение от экспонента выставки')),
                ('invite_minister', models.BooleanField(default=False, verbose_name='Приглашение от Министерства / ведомства')),
                ('message', models.BooleanField(default=False, verbose_name='Сообщение по тел/факсу от организаторов')),
                ('ad_city', models.BooleanField(default=False, verbose_name='Наружная реклама в городе')),
            ],
            options={
                'verbose_name': 'Пользователь ЭКСПЕРТ',
                'verbose_name_plural': 'Пользователи ЭКСПЕРТ',
            },
            bases=('users.user',),
        ),
        migrations.CreateModel(
            name='GosUser',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='users.user')),
                ('full_name', models.CharField(max_length=300, verbose_name='Ф.И.О')),
                ('phone', models.BigIntegerField(blank=True, null=True, verbose_name='Телефон')),
                ('oganization', models.CharField(blank=True, choices=[['Министерство иностранных дел', 'Министерство иностранных дел'], ['Министерство внутренних дел', 'Министерство внутренних дел'], ['Министерство образования и науки', 'Министерство образования и науки'], ['Министерство финансов', 'Министерство финансов'], ['Министерство экономики', 'Министерство экономики'], ['Министерство труда и социального развития', 'Министерство труда и социального развития'], ['Министерство транспорта и дорожного хозяйства', 'Министерство транспорта и дорожного хозяйства'], ['Министерство сельского хозяйства, водного хозяйства и регионального развития', 'Министерство сельского хозяйства, водного хозяйства и регионального развития'], ['Государственный комитет национальной безопасности', 'Государственный комитет национальной безопасности'], ['Государственная налоговая служба', 'Государственная налоговая служба'], ['Государственная таможенная служба', 'Государственная таможенная служба'], ['Государственная служба по борьбе с экономической преступностью', 'Государственная служба по борьбе с экономической преступностью']], default=None, max_length=300, null=True, verbose_name='Организация')),
                ('branch', models.CharField(blank=True, max_length=300, null=True, verbose_name='Отделение')),
                ('position', models.CharField(blank=True, max_length=300, null=True, verbose_name='Должность')),
                ('whatsapp_bool', models.BooleanField(default=False, verbose_name='WhatsApp')),
                ('telegram_bool', models.BooleanField(default=False, verbose_name='Telegram')),
                ('radio_bool', models.BooleanField(default=False, verbose_name='Радио реклама')),
                ('tv_bool', models.BooleanField(default=False, verbose_name='ТВ')),
                ('instagram_bool', models.BooleanField(default=False, verbose_name='Инстаграм')),
                ('invite_mail', models.BooleanField(default=False, verbose_name='Приглашение от организаторов по почте')),
                ('invite_fair', models.BooleanField(default=False, verbose_name='Приглашение от экспонента выставки')),
                ('invite_minister', models.BooleanField(default=False, verbose_name='Приглашение от Министерства / ведомства')),
                ('message', models.BooleanField(default=False, verbose_name='Сообщение по тел/факсу от организаторов')),
                ('ad_city', models.BooleanField(default=False, verbose_name='Наружная реклама в городе')),
                ('gos_bool_one', models.BooleanField(default=False, verbose_name='Присутствие инвесторов')),
                ('gos_bool_two', models.BooleanField(default=False, verbose_name='Потенциал выставки')),
                ('gos_bool_three', models.BooleanField(default=False, verbose_name='Развитие экономики Кыргызстана')),
                ('gos_bool_four', models.BooleanField(default=False, verbose_name='Инвестиционные проекты')),
            ],
            options={
                'verbose_name': 'Пользователь ГОС-ОРГАНЫ',
                'verbose_name_plural': 'Пользователи ГОС-ОРГАНЫ',
            },
            bases=('users.user',),
        ),
        migrations.CreateModel(
            name='UserSMI',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='users.user')),
                ('image_certificate', models.ImageField(blank=True, null=True, upload_to='images/certificate-smi', verbose_name='Загрузите вашего журналистского удостоверения в  png или jpg')),
                ('image_logo', models.ImageField(blank=True, null=True, upload_to='images/logo-smi', verbose_name='Загрузите логотип компании в png или jpg')),
                ('quantity_person', models.CharField(blank=True, max_length=300, null=True, verbose_name='Сколько у вас человек в команде ?')),
                ('name_organization', models.CharField(blank=True, max_length=300, null=True, verbose_name='Полное юридическое наименование организации')),
                ('address', models.CharField(blank=True, max_length=300, null=True, verbose_name='Юридический адрес')),
                ('web_site', models.CharField(blank=True, max_length=300, null=True, verbose_name='Веб-сайт')),
                ('email_company', models.EmailField(blank=True, max_length=300, null=True, verbose_name='Email компании')),
                ('phone', models.BigIntegerField(blank=True, null=True, verbose_name='Телефон')),
                ('instagram', models.CharField(blank=True, max_length=300, null=True, verbose_name='Instagram')),
                ('facebook', models.CharField(blank=True, max_length=300, null=True, verbose_name='Facebook')),
                ('twitter', models.CharField(blank=True, max_length=300, null=True, verbose_name='Twitter')),
                ('whatsapp_bool', models.BooleanField(default=False, verbose_name='WhatsApp')),
                ('telegram_bool', models.BooleanField(default=False, verbose_name='Telegram')),
                ('radio_bool', models.BooleanField(default=False, verbose_name='Радио реклама')),
                ('tv_bool', models.BooleanField(default=False, verbose_name='ТВ')),
                ('instagram_bool', models.BooleanField(default=False, verbose_name='Инстаграм')),
                ('invite_mail', models.BooleanField(default=False, verbose_name='Приглашение от организаторов по почте')),
                ('invite_fair', models.BooleanField(default=False, verbose_name='Приглашение от экспонента выставки')),
                ('invite_minister', models.BooleanField(default=False, verbose_name='Приглашение от Министерства / ведомства')),
                ('message', models.BooleanField(default=False, verbose_name='Сообщение по тел/факсу от организаторов')),
                ('ad_city', models.BooleanField(default=False, verbose_name='Наружная реклама в городе')),
                ('smi_bool_one', models.BooleanField(default=False, verbose_name='Стать частью информационной поддержки')),
                ('smi_bool_two', models.BooleanField(default=False, verbose_name='Знакомство с новыми компаниями')),
                ('smi_bool_three', models.BooleanField(default=False, verbose_name='Освещение и полезная информация')),
                ('smi_bool_four', models.BooleanField(default=False, verbose_name='Участие на пресс-конференции')),
            ],
            options={
                'verbose_name': 'Пользователь СМИ',
                'verbose_name_plural': 'Пользователи СМИ',
            },
            bases=('users.user',),
        ),
        migrations.CreateModel(
            name='Visitor',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='users.user')),
                ('full_name', models.CharField(max_length=300, verbose_name='Ф.И.О')),
                ('phone', models.BigIntegerField(blank=True, null=True, verbose_name='Телефон')),
            ],
            options={
                'verbose_name': 'Пользователь ПОСЕТИТЕЛЬ',
                'verbose_name_plural': 'Пользователи ПОСЕТИТЕЛЬ',
            },
            bases=('users.user',),
        ),
    ]
