Index: main/urls.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.contrib import admin\nfrom django.urls import path, include\nfrom rest_framework_swagger.views import get_swagger_view\nfrom django.conf.urls.static import static\n\nfrom .yasg import urlpatterns as doc_urls\nfrom . import settings\nfrom rest_framework.routers import DefaultRouter\n\nfrom rest_framework_simplejwt.views import (\n    TokenVerifyView,\n    TokenObtainPairView,\n    TokenRefreshView,\n)\n\nrouter = DefaultRouter()\n\nschema_view = get_swagger_view(title='Pastebin API')\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('api/token/verify/', TokenVerifyView.as_view(), name='token_verify'),\n    # APPS\n    path('', include('apps.users.urls')),\n<<<<<<< HEAD\n    path('chat/', include('apps.chat.urls')),\n]\n=======\n    path('main_page/', include('apps.main_page.urls')),\n] \n>>>>>>> c24275b40e656caf4001047c25a57ce12b54876a\n\nurlpatterns += doc_urls\nif settings.DEBUG:\n    urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main/urls.py b/main/urls.py
--- a/main/urls.py	
+++ b/main/urls.py	
@@ -22,13 +22,9 @@
     path('api/token/verify/', TokenVerifyView.as_view(), name='token_verify'),
     # APPS
     path('', include('apps.users.urls')),
-<<<<<<< HEAD
     path('chat/', include('apps.chat.urls')),
-]
-=======
     path('main_page/', include('apps.main_page.urls')),
 ] 
->>>>>>> c24275b40e656caf4001047c25a57ce12b54876a
 
 urlpatterns += doc_urls
 if settings.DEBUG:
Index: apps/users/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import uuid\nimport os\n\nfrom rest_framework.authtoken.models import Token\nfrom django.conf import settings\nfrom django.contrib.auth.hashers import make_password\nfrom django.contrib.auth.models import AbstractUser\nfrom apps.users.managers import CustomManager\nfrom django.db import models\n\n\n\nparametersForNull = {\n    'null': True,\n    'blank': True,\n}\n\n\nclass Rename:\n    def __init__(self, path):\n        self.path = path\n        \n    def rename(self, instance, filename):\n        ext = filename.split('.')[-1]\n        filename = '%s.%s' % (uuid.uuid4(), ext)\n        return os.path.join(self.path, filename)\n\n\nclass User(AbstractUser):\n    class Meta:\n        verbose_name = \"Пользователь\"\n        verbose_name_plural = \"Пользователи\"\n\n    def __str__(self):\n        return self.email.__str__()\n\n    username = None\n    date_joined = None\n    first_name = None\n    last_name = None\n    last_login = None\n    is_active = models.BooleanField(default=True, verbose_name=\"Активный?\")\n    is_staff = models.BooleanField(default=False, verbose_name=\"Админ?\")\n    is_superuser = models.BooleanField(default=False, verbose_name=\"СуперАдмин?\")\n\n    type_register = models.CharField(verbose_name=\"В качестве кого вы хотите посетить HIT EXPO?\", max_length=300, **parametersForNull)\n\n    company_one = models.CharField(max_length=300, verbose_name=\"Название компании\", **parametersForNull)\n    company_two = models.CharField(max_length=300, verbose_name=\"Юридическое название компании\", **parametersForNull)\n\n    branch = models.CharField(max_length=300, verbose_name=\"Отделение\", **parametersForNull)\n    number_of_employees = models.CharField(max_length=300, verbose_name=\"Количество сотрудников\", **parametersForNull)\n    trade = models.CharField(max_length=300, verbose_name=\"Отрасль (Выберите одну из представленных 'Строительство и недвижимость')\", **parametersForNull)\n    other_trade = models.CharField(max_length=300, verbose_name=\"Другое(Введите свою отрасль если не нашли среди предложенных)\", **parametersForNull)\n    direction = models.CharField(max_length=300, verbose_name=\"Направление (Напишите свой вид деятельности “Производство кирпичей”)\", **parametersForNull)\n    describe_company  = models.CharField(max_length=300, verbose_name=\"Опишите свою деятельность (товар или услугу)\", **parametersForNull)\n\n    photo_company = models.ImageField(verbose_name=\"Загрузите устав компании в  png или jpg\", upload_to='images/company', **parametersForNull)\n\n    ######################################            Данные о руководителе            #################################################\n\n    name_manager = models.CharField(max_length=300, verbose_name=\"Ф.И.О (manager)\", **parametersForNull)\n    birth_manager = models.CharField(max_length=300, verbose_name=\"Дата рождения (manager)\", **parametersForNull)\n    inn_manager = models.CharField(max_length=300, verbose_name=\"ИНН/ИИН руководителя\", **parametersForNull)\n    position_manager = models.CharField(max_length=300, verbose_name=\"ИНН/ИИН руководителя\", **parametersForNull)\n    active_manager = models.CharField(max_length=300, verbose_name=\"Действующий на основании\", **parametersForNull)\n\n    ######################################          Контактное лицо          ##################################\n    \n    selection_face = models.CharField(max_length=300, verbose_name=\"Вы являетесь контактным лицом ?\", **parametersForNull)\n    name_face = models.CharField(max_length=300, verbose_name=\"Ф.И.О (Контактное лицо)\", **parametersForNull)\n    phone_face = models.CharField(max_length=300, verbose_name=\"Номер телефона: (Контактное лицо)\", **parametersForNull)\n\n    ################################################################################################################\n    name = models.CharField(max_length=300, verbose_name=\"Ф.И.О\", **parametersForNull)\n    workEmail = models.EmailField(verbose_name=\"Work Email\", default=None, unique=True, **parametersForNull)\n    country = models.CharField(max_length=300, verbose_name=\"Страна\", **parametersForNull)\n    city = models.CharField(max_length=300, verbose_name=\"Город\", **parametersForNull)\n    birth = models.CharField(max_length=300, verbose_name=\"Дата рождения\", **parametersForNull)\n    \n    workPhone = models.CharField(max_length=300, verbose_name=\"Телефон\", **parametersForNull)\n    personalPhone = models.CharField(max_length=300, verbose_name=\"WhatsApp\", **parametersForNull)\n\n    gos_organization = models.CharField(max_length=300, verbose_name=\"Организация\", **parametersForNull)\n    \n    ####### Я заинтересован в #########\n\n    visit = models.BooleanField(verbose_name=\"Посещение на HIT EXPO\", default=False)\n    participation = models.BooleanField(verbose_name=\"Участие на HIT EXPO\", default=False)\n    projects = models.BooleanField(verbose_name=\"Поиске проектов\", default=False)\n    other_one = models.BooleanField(verbose_name=\"Другое\", default=False)\n\n\n    ##########################      Ваши цели посещение HIT Expo?      SMI      ###############################\n\n    smi_bool_one = models.BooleanField(verbose_name=\"Стать частью информационной поддержки\", default=False)\n    smi_bool_two = models.BooleanField(verbose_name=\"Знакомство с новыми компаниями\", default=False)\n    smi_bool_three = models.BooleanField(verbose_name=\"Освещение и полезная информация\", default=False)\n    smi_bool_four = models.BooleanField(verbose_name=\"Участие на пресс-конференции\", default=False)\n\n\n    ##########################      Что вас заинтересовала в нашей выставке?:    GOS     ###############################\n\n    gos_bool_one = models.BooleanField(verbose_name=\"Присутствие инвесторов\", default=False)\n    gos_bool_two = models.BooleanField(verbose_name=\"Потенциал выставки\", default=False)\n    gos_bool_three = models.BooleanField(verbose_name=\"Развитие экономики Кыргызстана\", default=False)\n    gos_bool_four = models.BooleanField(verbose_name=\"Инвестиционные проекты\", default=False)\n\n    ########  Как вы узнали о мероприятие?   #########\n\n    whatsapp_bool = models.BooleanField(verbose_name=\"Whats App\", default=False)\n    telegram_bool = models.BooleanField(verbose_name=\"Telegram\", default=False)\n    radio_bool = models.BooleanField(verbose_name=\"Радио\", default=False)\n    tv_bool = models.BooleanField(verbose_name=\"ТВ\", default=False)\n    instagram_bool = models.BooleanField(verbose_name=\"Инстаграм\", default=False)\n    invite_mail = models.BooleanField(verbose_name=\"Приглашение от организаторов по почте\", default=False)\n    invite_fair = models.BooleanField(verbose_name=\"Приглашение от экспонента выставки\", default=False)\n    invite_minister = models.BooleanField(verbose_name=\"Приглашение от Министерства / ведомства\", default=False)\n    message = models.BooleanField(verbose_name=\"Сообщение по тел/факсу от организаторов\", default=False)\n    ad_city = models.BooleanField(verbose_name=\"Наружная реклама в городе\", default=False)\n    other_two = models.BooleanField(verbose_name=\"Другое\", default=False)\n\n    ################  Какие преимущества и возможности предоставляете?     ###################\n\n    benefits_one = models.BooleanField(verbose_name=\"Присутствие инвесторов\", default=False)\n    benefits_two = models.BooleanField(verbose_name=\"Присутствие государственных органов\", default=False)\n    benefits_three = models.BooleanField(verbose_name=\"Выход на мировой рынок\", default=False)\n    benefits_for = models.BooleanField(verbose_name=\"Реализация продукции\", default=False)\n    benefits_five = models.BooleanField(verbose_name=\"Возможность получения инвестиции\", default=False)\n    benefits_six = models.BooleanField(verbose_name=\"Расширение бизнеса\", default=False)\n    benefits_seven = models.BooleanField(verbose_name=\"Коммуникация с другми участниками\", default=False)\n    benefits_eight = models.BooleanField(verbose_name=\"Программа\", default=False)\n    benefits_nine = models.BooleanField(verbose_name=\"Место и формат проведения\", default=False)\n    benefits_ten = models.BooleanField(verbose_name=\"Возможность получения номинации\", default=False)\n\n    ##############################################       USER           ############################################\n    \n    participant_sector = models.CharField(max_length=300, verbose_name=\"В качестве кого вы хотите посетить HIT EXPO ?\", **parametersForNull)\n    \n    position_main = models.CharField(max_length=300, verbose_name=\"Должность\", **parametersForNull)\n\n    #########################################        СМИ       #########################################\n        \n    image_certificate_smi = models.ImageField(verbose_name=\"Загрузите вашего журналистского удостоверения в  png или jpg\", upload_to='images/certificate-smi', **parametersForNull)\n    image_logo = models.ImageField(verbose_name=\"Загрузите логотип компании в png или jpg\", upload_to='images/logo-smi', **parametersForNull)\n    \n    quantity_person_smi = models.CharField(max_length=300, verbose_name=\"Сколько у вас человек в команде ?\", **parametersForNull)\n    organization_smi = models.CharField(max_length=300, verbose_name=\"Полное юридическое наименование организации\", **parametersForNull)\n    address_one = models.CharField(max_length=300, verbose_name=\"Юридический адрес\", **parametersForNull)\n    address_two = models.CharField(max_length=300, verbose_name=\"Фактический адрес\", **parametersForNull)\n    web_site = models.CharField(verbose_name=\"Укажите url Веб-сайта\", max_length=300, **parametersForNull)\n    work_phone = models.CharField(max_length=300, verbose_name=\"Рабочий телефон\", **parametersForNull)\n    email_smi = models.EmailField(max_length=300, verbose_name=\"Email SMI\", default=None, unique=True, **parametersForNull)\n    \n    smi_team = models.CharField(max_length=300, verbose_name=\"Сколько у вас человек в команде?\", **parametersForNull)\n    \n    \n    #############################################       Участник           ##########################################\n\n    participation_sector = models.CharField(max_length=300, verbose_name=\"Выберите сектор участия (с условиями участия каждого сектора можно ознакомится)\", **parametersForNull)\n        \n    brand = models.CharField(max_length=300, verbose_name=\"Наименование бренда\", **parametersForNull)\n    organization_participant = models.CharField(max_length=300, verbose_name=\"Полное юридическое наименование организации\", **parametersForNull)\n    name_bank = models.CharField(max_length=300, verbose_name=\"Наименование банка\", **parametersForNull)\n    \n    inn = models.CharField(max_length=300, verbose_name=\"ИИН/ИНН(Серия патента компании)\", **parametersForNull)\n    orgn = models.CharField(max_length=300, verbose_name=\"ОГРН(Номер патента)\", **parametersForNull)\n    p_c = models.CharField(max_length=300, verbose_name=\"Р/С\", **parametersForNull)\n    bik = models.CharField(max_length=300, verbose_name=\"БИК\", **parametersForNull)\n    okpo = models.CharField(max_length=300, verbose_name=\"ОКПО\", **parametersForNull)\n    \n    pdf_file = models.FileField(verbose_name=\"Загрузите свидетельство регистрации в pdf\", upload_to='file/register', **parametersForNull)\n    name_manager = models.CharField(max_length=300, verbose_name=\"Ф.И.О руководителя\", **parametersForNull)\n    position_participant = models.CharField(max_length=300, verbose_name=\"Должность (Участник)\", **parametersForNull)\n    description = models.TextField(verbose_name=\"Описание\", **parametersForNull)\n\n\n    email_participant = models.EmailField(max_length=300, verbose_name=\"Email Participant\", default=None, unique=True, **parametersForNull)\n    \n    \n    ###############################################         Контактные лица          #########################################\n\n    name_contact_person = models.CharField(max_length=300, verbose_name=\"Ф.И.О (контактным лицом)\", **parametersForNull)\n    position_contact_person = models.CharField(max_length=300, verbose_name=\"Должность (контактным лицом)\", **parametersForNull)\n    phone_contact_person = models.CharField(max_length=300, verbose_name=\"Телефон (контактным лицом)\", **parametersForNull)\n    whatsapp_contact_person = models.CharField(max_length=300, verbose_name=\"WhatsApp (контактным лицом)\", **parametersForNull)\n\n    # socials\n    instagram = models.CharField(verbose_name=\"Укажите url Instagram\", max_length=300, **parametersForNull)\n    facebook = models.CharField(verbose_name=\"Укажите url Facebook\", max_length=300, **parametersForNull)\n    twitter = models.CharField(verbose_name=\"Укажите url Twitter\", max_length=300, **parametersForNull)\n    \n    #####################################   Investment    #################################\n    \n    agricultural_production = models.BooleanField(verbose_name=\"Производство + сельхоз\", default=False)\n    construction = models.BooleanField(verbose_name=\"Строительство\", default=False)\n    technique = models.BooleanField(verbose_name=\"Строительство + техника\", default=False)\n    textiles = models.BooleanField(verbose_name=\"Текстиль, обувь и аксессуары\", default=False)\n    education = models.BooleanField(verbose_name=\"Образование\", default=False)\n    medicine = models.BooleanField(verbose_name=\"Медицина\", default=False)\n    tourism = models.BooleanField(verbose_name=\"Туризм\", default=False)\n    echo = models.BooleanField(verbose_name=\"Эко\", default=False)\n    it = models.BooleanField(verbose_name=\"IT\", default=False)\n    banks = models.BooleanField(verbose_name=\"Банки\", default=False)\n    kfx = models.BooleanField(verbose_name=\"КФХ\", default=False)\n    krc = models.BooleanField(verbose_name=\"КРС\", default=False)\n    machinery = models.BooleanField(verbose_name=\"Машиностроение\", default=False)\n    industry = models.BooleanField(verbose_name=\"Текстильное промышленность\", default=False)\n    \n    \n    #####################################################################\n    \n    choose_direction_fashion = models.CharField(max_length=300, verbose_name=\"Выберите направление (Fashion)\", **parametersForNull)\n    choose_direction_food = models.CharField(max_length=300, verbose_name=\"Выберите направление (Food)\", **parametersForNull)\n    choose_direction_expert = models.CharField(max_length=300, verbose_name=\"Эксперт\", **parametersForNull)\n    \n    status = models.CharField(max_length=300, verbose_name=\"Статус\", **parametersForNull)\n    manager = models.CharField(max_length=300, verbose_name=\"Менеджер\", **parametersForNull)\n    referal = models.CharField(max_length=300, verbose_name=\"Реферал\", **parametersForNull)\n    \n    ####################################.       PASSWORD    #################################\n    uniqueId = models.UUIDField(unique=True, verbose_name=\"Уникальный id\", **parametersForNull)\n    email = models.EmailField(max_length=200, verbose_name=\"Email\", unique=True)\n\n    resetPasswordUUID = models.UUIDField(verbose_name=\"Ссылка для восстановления пароля\", **parametersForNull)\n    resetPasswordDate = models.BigIntegerField(verbose_name=\"Время восстановления пароля\", **parametersForNull)\n\n    USERNAME_FIELD = 'email'\n\n    REQUIRED_FIELDS = []\n\n    objects = CustomManager()\n\n    def save(self, force_insert=False, force_update=False, using=None,\n            update_fields=None):\n        if not self.id:\n            self.uniqueId = uuid.uuid4()\n        super(User, self).save(force_insert=False, force_update=False, using=None, update_fields=None)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/apps/users/models.py b/apps/users/models.py
--- a/apps/users/models.py	
+++ b/apps/users/models.py	
@@ -1,9 +1,6 @@
 import uuid
 import os
 
-from rest_framework.authtoken.models import Token
-from django.conf import settings
-from django.contrib.auth.hashers import make_password
 from django.contrib.auth.models import AbstractUser
 from apps.users.managers import CustomManager
 from django.db import models
@@ -235,4 +232,22 @@
             update_fields=None):
         if not self.id:
             self.uniqueId = uuid.uuid4()
-        super(User, self).save(force_insert=False, force_update=False, using=None, update_fields=None)
\ No newline at end of file
+        super(User, self).save(force_insert=False, force_update=False, using=None, update_fields=None)
+
+
+class UserSmi(models.Model):
+
+    class Meta:
+        verbose_name = "SMI"
+        verbose_name_plural = "SMI"
+
+    def __str__(self):
+        return self.email.__str__()
+
+    image_certificate_smi = models.ImageField(verbose_name="Загрузите вашего журналистского удостоверения", upload_to='images/certificate-smi', **parametersForNull)
+    image_logo = models.ImageField(verbose_name="Загрузите логотип компании в png или jpg", upload_to='images/logo-smi', **parametersForNull)
+    smi_team = models.CharField(max_length=300, verbose_name="Сколько у вас человек в команде?", **parametersForNull)
+    phone = models.CharField(max_length=300, verbose_name="Телефон", **parametersForNull)
+    organization_smi = models.CharField(max_length=300, verbose_name="Полное юридическое наименование организации", **parametersForNull)
+    address_one = models.CharField(max_length=300, verbose_name="Юридический адрес", **parametersForNull)
+
Index: main/settings.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import django_heroku\nimport os\nfrom pathlib import Path\n\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\nBASE_DIR = Path(__file__).resolve().parent.parent\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-7#tgtn12)r@x36v9bt5u+)7ur@-!rdp4+3ot@2y6ca0d2%&+lb'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = [\"*\"]\n\nAUTH_USER_MODEL = \"users.User\"\n\nSECRET_ADMIN_KEY = '12345'\n\n# Application definition\n\nINSTALLED_APPS = [\n    'jazzmin',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    # APPS\n    'apps.categories.apps.CategoriesConfig',\n    'apps.users.apps.UsersConfig',\n<<<<<<< HEAD\n    'apps.chat.apps.ChatConfig',\n=======\n    'apps.main_page',\n    'apps.investor',\n>>>>>>> c24275b40e656caf4001047c25a57ce12b54876a\n    # REST\n    'rest_framework',\n    'django_filters',\n    'rest_framework_swagger',\n    'rest_framework_simplejwt',\n    # LIB\n    'corsheaders',\n    'drf_yasg',\n]\n\nMIDDLEWARE = [\n    'corsheaders.middleware.CorsMiddleware', #CORS\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'main.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'main.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n\n# DATABASES = {\n#    'default': {\n#        'ENGINE': 'django.db.backends.postgresql_psycopg2',\n#        'NAME': 'expo_db',\n#        'USER': 'hit_expo',\n#        'PASSWORD': 'expo_123',\n#        'HOST': 'pgdb',\n#        'PORT': '5432',\n#    }\n# }\n\n\n\nREST_FRAMEWORK = {\n    # Use Django's standard `django.contrib.auth` permissions,\n    # or allow read-only access for unauthenticated users.\n    # 'DEFAULT_PERMISSION_CLASSES': [\n    #     'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'\n    # ],\n    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework.authentication.TokenAuthentication',\n        'rest_framework.authentication.BasicAuthentication',\n        'rest_framework.authentication.SessionAuthentication',\n        'rest_framework_simplejwt.authentication.JWTAuthentication',\n    )\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/4.2/topics/i18n/\n\nLANGUAGE_CODE = \"ru-RU\"\n\nTIME_ZONE = \"Asia/Bishkek\"\n\nUSE_I18N = True\n\nUSE_TZ = True\n\n\n# CORS\nCORS_ALLOW_ALL_ORIGINS = True\nCORS_ORIGIN_ALLOW_ALL = True\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\n\nSTATIC_URL = \"static/\"\nSTATIC_ROOT = os.path.join(BASE_DIR, 'static')\nSTATICFILES_STORAGE = 'whitenoise.storage.CompressedStaticFilesStorage'\n\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\n\n# MEDIA\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n\ndjango_heroku.settings(locals())\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main/settings.py b/main/settings.py
--- a/main/settings.py	
+++ b/main/settings.py	
@@ -33,13 +33,10 @@
     'django.contrib.staticfiles',
     # APPS
     'apps.categories.apps.CategoriesConfig',
-    'apps.users.apps.UsersConfig',
-<<<<<<< HEAD
     'apps.chat.apps.ChatConfig',
-=======
+    'apps.users.apps.UsersConfig',
     'apps.main_page',
     'apps.investor',
->>>>>>> c24275b40e656caf4001047c25a57ce12b54876a
     # REST
     'rest_framework',
     'django_filters',
