Index: main/settings.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import django_heroku\nimport os\nfrom pathlib import Path\n\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\nBASE_DIR = Path(__file__).resolve().parent.parent\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-7#tgtn12)r@x36v9bt5u+)7ur@-!rdp4+3ot@2y6ca0d2%&+lb'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = [\"*\"]\n\nAUTH_USER_MODEL = \"users.User\"\n\nSECRET_ADMIN_KEY = '12345'\n\n# Application definition\n\nINSTALLED_APPS = [\n    'jazzmin',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    # APPS\n    'apps.categories.apps.CategoriesConfig',\n    'apps.users.apps.UsersConfig',\n    'apps.main_page',\n    # REST\n    'rest_framework',\n    'django_filters',\n    'rest_framework_swagger',\n    'rest_framework_simplejwt',\n    # LIB\n    'corsheaders',\n    'drf_yasg',\n]\n\nMIDDLEWARE = [\n    'corsheaders.middleware.CorsMiddleware', #CORS\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'main.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'main.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\n\n# DATABASES = {\n#     'default': {\n#         'ENGINE': 'django.db.backends.sqlite3',\n#         'NAME': BASE_DIR / 'db.sqlite3',\n#     }\n# }\n\nDATABASES = {\n   'default': {\n       'ENGINE': 'django.db.backends.postgresql_psycopg2',\n       'NAME': 'expo_db',\n       'USER': 'hit_expo',\n       'PASSWORD': 'expo_123',\n       'HOST': 'pgdb',\n       'PORT': '5432',\n   }\n}\n\n\n\nREST_FRAMEWORK = {\n    # Use Django's standard `django.contrib.auth` permissions,\n    # or allow read-only access for unauthenticated users.\n    # 'DEFAULT_PERMISSION_CLASSES': [\n    #     'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'\n    # ],\n    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework.authentication.TokenAuthentication',\n        'rest_framework.authentication.BasicAuthentication',\n        'rest_framework.authentication.SessionAuthentication',\n        'rest_framework_simplejwt.authentication.JWTAuthentication',\n    )\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/4.2/topics/i18n/\n\nLANGUAGE_CODE = \"ru-RU\"\n\nTIME_ZONE = \"Asia/Bishkek\"\n\nUSE_I18N = True\n\nUSE_TZ = True\n\n\n# CORS\nCORS_ALLOW_ALL_ORIGINS = True\nCORS_ORIGIN_ALLOW_ALL = True\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\n\nSTATIC_URL = \"static/\"\nSTATIC_ROOT = os.path.join(BASE_DIR, 'static')\nSTATICFILES_STORAGE = 'whitenoise.storage.CompressedStaticFilesStorage'\n\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\n\n# MEDIA\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n\ndjango_heroku.settings(locals())
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main/settings.py b/main/settings.py
--- a/main/settings.py	(revision eb532420b49a33b047bdd2d75391121c25b9ed81)
+++ b/main/settings.py	(date 1689937105982)
@@ -80,23 +80,23 @@
 # Database
 # https://docs.djangoproject.com/en/4.2/ref/settings/#databases
 
-# DATABASES = {
-#     'default': {
-#         'ENGINE': 'django.db.backends.sqlite3',
-#         'NAME': BASE_DIR / 'db.sqlite3',
-#     }
-# }
-
 DATABASES = {
-   'default': {
-       'ENGINE': 'django.db.backends.postgresql_psycopg2',
-       'NAME': 'expo_db',
-       'USER': 'hit_expo',
-       'PASSWORD': 'expo_123',
-       'HOST': 'pgdb',
-       'PORT': '5432',
-   }
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': BASE_DIR / 'db.sqlite3',
+    }
 }
+#
+# DATABASES = {
+#    'default': {
+#        'ENGINE': 'django.db.backends.postgresql_psycopg2',
+#        'NAME': 'expo_db',
+#        'USER': 'hit_expo',
+#        'PASSWORD': 'expo_123',
+#        'HOST': 'pgdb',
+#        'PORT': '5432',
+#    }
+# }
 
 
 
Index: apps/categories/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.db import models\n\nfrom apps.categories.services import get_upload_path, validate_file_extension\n\n\nclass Category(models.Model):\n    parent = models.ForeignKey('self', on_delete=models.PROTECT,\n                                related_name='children', blank=True, null=True)\n    name = models.CharField(max_length=255)\n    image = models.ImageField(upload_to=get_upload_path, null=True, blank=True)\n    icon = models.FileField(upload_to=get_upload_path, validators=[validate_file_extension], null=True, blank=True)\n    is_main = models.BooleanField(default=False)\n\n    class Meta:\n        db_table = 'category'\n\n    def __str__(self):\n<<<<<<< HEAD\n        return f'{self.name}'\n=======\n        return f'{self.name}'\n>>>>>>> origin/main\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/apps/categories/models.py b/apps/categories/models.py
--- a/apps/categories/models.py	(revision eb532420b49a33b047bdd2d75391121c25b9ed81)
+++ b/apps/categories/models.py	(date 1689937057223)
@@ -15,8 +15,4 @@
         db_table = 'category'
 
     def __str__(self):
-<<<<<<< HEAD
         return f'{self.name}'
-=======
-        return f'{self.name}'
->>>>>>> origin/main
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.11 (hit_expo)\" project-jdk-type=\"Python SDK\" />\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision eb532420b49a33b047bdd2d75391121c25b9ed81)
+++ b/.idea/misc.xml	(date 1689937057264)
@@ -1,4 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.11 (hit_expo)" project-jdk-type="Python SDK" />
+  <component name="PyCharmProfessionalAdvertiser">
+    <option name="shown" value="true" />
+  </component>
 </project>
\ No newline at end of file
